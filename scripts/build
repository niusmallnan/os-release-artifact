#!/bin/bash
set -e

source $(dirname $0)/version

cd $(dirname $0)/..

if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ]; then
    echo AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY must be set
fi

if [ -z "$OS_VERSION" ] || [ -z "$DOCKER_VERSION" ] || [ -z "$KERNEL_VERSION" ]; then
    echo OS_VERSION/KERNEL_VERSION/DOCKER_VERSION must be set
fi

AMI_HVM_LIST=""
AMI_HVM_ECS_LIST=""

for REGIONLINE in $(aws --output=text ec2 describe-regions --region us-west-2 | sed 's/\s/,/g'); do
    REGION=$(echo $REGIONLINE | cut -f3 -d,)

    # Get AMI name
    for LINE in $(aws --output text ec2 describe-images --region $REGION --owner self --query 'Images[*].{ID:ImageId,Name:Name,SnapshotId:BlockDeviceMappings[0].Ebs.SnapshotId}'  | grep ${OS_VERSION} | sed 's/\s/,/g' ); do
        AMI=$(echo "$LINE" | cut -f1 -d ',')
        NAME=$(echo "$LINE" | cut -f2 -d ',')
        SNAPSHOT=$(echo "$LINE" | cut -f3 -d ',')
        if [[ "$NAME" == *test* ]]; then
            echo "      Skipping test $NAME: $AMI with $SNAPSHOT in $REGION"
            continue
        fi
        obj=`echo '{}' | jq --arg r ${REGION} --arg a ${AMI} --arg n ${NAME} --arg s ${SNAPSHOT} '. + {region: $r, name: $n, ami: $a, snapshot: $s}'`
        if [[ "$NAME" == *ecs* ]]; then
            echo "Getting the ECS image $NAME: $AMI with $SNAPSHOT in $REGION"
            AMI_HVM_ECS_LIST="${AMI_HVM_ECS_LIST}${obj},"
            continue
        fi
        echo "Getting the HVM image $NAME: $AMI with $SNAPSHOT in $REGION"
        AMI_HVM_LIST="${AMI_HVM_LIST}${obj},"
    done
done

AMI_HVM_LIST=[`echo ${AMI_HVM_LIST} | sed 's/.$//'`]
AMI_HVM_ECS_LIST=[`echo ${AMI_HVM_ECS_LIST} | sed 's/.$//'`]

echo "Got HVM list: ${AMI_HVM_LIST}"
echo "Got ECS list: ${AMI_HVM_LIST}"


echo "s/\${OS_VERSION}/${OS_VERSION}/g" > artifact.sed
echo "s/\${DOCKER_VERSION}/${DOCKER_VERSION}/g" >> artifact.sed
echo "s/\${KERNEL_VERSION}/${KERNEL_VERSION}/g" >> artifact.sed
echo "s/\${AMI_HVM_LIST}/${AMI_HVM_LIST}/g" >> artifact.sed
echo "s/\${AMI_HVM_ECS_LIST}/${AMI_HVM_ECS_LIST}/g" >> artifact.sed

sed -f artifact.sed artifact.tpl | jq . > dist/artifact-${OS_VERSION}.json

